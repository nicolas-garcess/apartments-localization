doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        link(rel="stylesheet", type="text/css" href="/css/apartments.css")
        title Resultado de búsqueda
    body 
        h1= message
        main
            if reply.length > 1
                h2(class="results") #{reply.length} resultados
            else if reply.length == 1
                h2(class="results") #{reply.length} resultado
            else
                h2(class="results") 0 resultados
            div(class="container-download")
                a(href="" class="report" data-array=reply) Descargar reporte
            div(class="container-apartments")
                each apartment in reply 
                    div(class="apartment")
                        p(class="apartment__title")= apartment.Titulo
                        if apartment.Habitaciones
                            p(class="apartment__rooms") #{apartment.Habitaciones} habitaciones
                        else 
                            p(class="apartment__rooms") Habitaciones no especificadas
                        p(class="apartment__price") #{apartment.Precio} €
                        p(class="apartment__phone") Contacto: #{apartment.Telefonos}
        
        script.
            const download = document.querySelector(".report");            
            download.addEventListener('click', async (e) => {
                e.preventDefault() //- Evita que se refresque el sitio web
                let data = download.dataset.array;
                try {
                    fetch('/apartamentos/exportar', {
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({type: "pdf", data: data}) 
                    })
                    .then(async res => ({
                            filename: 'reporte.pdf',
                            blob: await res.blob()
                        }))
                    .then(resObj => {
                        // It is necessary to create a new blob object with mime-type explicitly set for all browsers except Chrome, but it works for Chrome too.
                        const newBlob = new Blob([resObj.blob], { type: 'application/pdf' });

                        // MS Edge and IE don't allow using a blob object directly as link href, instead it is necessary to use msSaveOrOpenBlob
                        if (window.navigator && window.navigator.msSaveOrOpenBlob) {
                            window.navigator.msSaveOrOpenBlob(newBlob);
                        } else {
                            // For other browsers: create a link pointing to the ObjectURL containing the blob.
                            const objUrl = window.URL.createObjectURL(newBlob);

                            let link = document.createElement('a');
                            link.href = objUrl;
                            link.download = resObj.filename;
                            link.click();

                            // For Firefox it is necessary to delay revoking the ObjectURL.
                            setTimeout(() => { window.URL.revokeObjectURL(objUrl); }, 250);
                        }
                    })
                    .catch((error) => {
                        console.log('DOWNLOAD ERROR', error);
                    });                               
                } catch (error) {
                    console.log(error)
                }
            });

            //- let containerDownload = document.querySelector('.container-download');
            //- let link = document.createElement("a");
            
            //- link.innerHTML = "Descargar";
            //- //link.download = "reporte.pdf";
            //- link.target = "_blank"
            //- link.href = "./src/assets/pdf/reporte.pdf";
            //- containerDownload.appendChild(link);
            //- link.click();
